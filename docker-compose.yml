services:
  odbp:
    image: ${DOCKER_REGISTRY-}odbp
    build:
      context: .
      dockerfile: ODBP.Server/Dockerfile
    environment:
      - ELASTICSEARCH_BASE_URL=http://es:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=insecure-elastic
    ports:
      - "53997:8080"
    depends_on:
      es:
        condition: service_healthy

  # Based on https://www.elastic.co/guide/en/elasticsearch/reference/current/run-elasticsearch-locally.html
  # Log in with `elastic` / `insecure-elastic` (or whatever you set the envvar `ES_PASSWORD` to).
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-8.17.1}
    environment:
      - discovery.type=single-node
      - cluster.name=gpp-search-dev
      - node.name=es01
      - node.roles=master,data
      - ingest.geoip.downloader.enabled=false
      - ELASTIC_PASSWORD=${ES_PASSWORD:-insecure-elastic}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      # - xpack.license.self_generated.type=trial
      - xpack.ml.use_auto_machine_memory_percent=true
      - ES_JAVA_OPTS=-Xms${ES_HEAP_INIT:-128m} -Xmx${ES_HEAP_MAX:-2g}
      - cluster.routing.allocation.disk.watermark.low=${ES_DISK_SPACE_REQUIRED:-1gb}
      - cluster.routing.allocation.disk.watermark.high=${ES_DISK_SPACE_REQUIRED:-1gb}
      - cluster.routing.allocation.disk.watermark.flood_stage=${ES_DISK_SPACE_REQUIRED:-1gb}
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --output /dev/null --silent --fail -u elastic:${ES_PASSWORD:-insecure-elastic} http://es:9200/_search",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 9200
      # - "9300:9300"
 
volumes:
  es-data:
